name: Sync forked Repositories

on:
  schedule:
    # 07:00 UTC each day
    - cron:  '0 7 * * *'

  push:
    branches:
      - "main"

  workflow_dispatch:

jobs:
  get_forks:
    runs-on: ubuntu-latest
    outputs:
      forks: ${{ steps.get.outputs.result }}
      empty_forks: ${{ steps.check.outputs.result }}
    steps:
      - uses: actions/checkout@v2

      - name: Get forked repos to be excluded
        id: get_excluded
        uses: JoshuaTheMiller/conditional-build-matrix@0.0.1
        with:
          inputFile: './repos_exclude.json'
          filter: '[?target_repo!=`dmy`]'   

      - name: Get additional repos/branches 
        id: get_additional
        uses: JoshuaTheMiller/conditional-build-matrix@0.0.1
        with:
          inputFile: './additional_branches.json'
          filter: '[?target_repo!=`dmy`]'
      
      - name: Get forks
        uses: actions/github-script@v5
        id: get
        with:
          script: |
            const repos = (await github.request("https://api.github.com/users/" + context.repo.owner + "/repos")).data
            
            const exclude = ${{ steps.get_excluded.outputs.matrix }}
            
            let output = []
            
            for (const repo of repos) {
              if (repo.fork != true) {
                continue
              }
              
              if (exclude.include.includes(repo.full_name)) {
                continue
              }
              
              const repo_full = (await github.request("https://api.github.com/repos/" + repo.full_name)).data
              
              output.push({
                "target_repo": repo.full_name,
                "target_branch": repo.default_branch,
                "upstream_repo": repo_full.parent.full_name,
                "upstream_branch": repo_full.parent.default_branch
              })
            }
            
            const additionals = ${{ steps.get_additional.outputs.matrix }}
            
            for (const additional of additionals.include) {
              output.push(additional)
            }
            
            return output
      
      - name: Check empty
        uses: actions/github-script@v5
        id: check
        with:
          script: |
            let output = ${{ steps.get.outputs.result }}
            console.log("Count repos: " + (output.length))

            if (output.length == 0) {
              console.log("empty")
              return 'true'
            } else {
              console.log("not empty")
              return 'false' 
            }
          
  sync:
    needs: get_forks
    if: ${{ fromJSON(needs.get_forks.outputs.empty_forks) == 'false' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        fork: ${{ fromJSON(needs.get_forks.outputs.forks) }}
    steps:
      # Step 1: run a standard checkout action, provided by github
      - name: Checkout target repo
        uses: actions/checkout@v2
        with:
          repository: ${{ matrix.fork.target_repo }}
          ref: ${{ matrix.fork.target_branch }}
          token: ${{ secrets.ACCESS_TOKEN }}

    # Step 2: run the sync action
      - name: Sync upstream changes
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.2
        with:
          target_sync_branch: ${{ matrix.fork.target_branch }}
          target_repo_token: ${{ secrets.ACCESS_TOKEN }}
          upstream_sync_branch: ${{ matrix.fork.upstream_branch }}
          upstream_sync_repo: ${{ matrix.fork.upstream_repo }}

    # Step 3: Display a message based on the sync output var 'has_new_commits'
      - name: New commits found
        if: steps.sync.outputs.has_new_commits == 'true'
        run: echo "New commits were found to sync."
